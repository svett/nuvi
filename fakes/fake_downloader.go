// This file was generated by counterfeiter
package fakes

import (
	"io"
	"sync"

	"github.com/svett/nuvi"
)

type FakeDownloader struct {
	DownloadStub        func(url string) (io.ReadCloser, error)
	downloadMutex       sync.RWMutex
	downloadArgsForCall []struct {
		url string
	}
	downloadReturns struct {
		result1 io.ReadCloser
		result2 error
	}
}

func (fake *FakeDownloader) Download(url string) (io.ReadCloser, error) {
	fake.downloadMutex.Lock()
	fake.downloadArgsForCall = append(fake.downloadArgsForCall, struct {
		url string
	}{url})
	fake.downloadMutex.Unlock()
	if fake.DownloadStub != nil {
		return fake.DownloadStub(url)
	} else {
		return fake.downloadReturns.result1, fake.downloadReturns.result2
	}
}

func (fake *FakeDownloader) DownloadCallCount() int {
	fake.downloadMutex.RLock()
	defer fake.downloadMutex.RUnlock()
	return len(fake.downloadArgsForCall)
}

func (fake *FakeDownloader) DownloadArgsForCall(i int) string {
	fake.downloadMutex.RLock()
	defer fake.downloadMutex.RUnlock()
	return fake.downloadArgsForCall[i].url
}

func (fake *FakeDownloader) DownloadReturns(result1 io.ReadCloser, result2 error) {
	fake.DownloadStub = nil
	fake.downloadReturns = struct {
		result1 io.ReadCloser
		result2 error
	}{result1, result2}
}

var _ nuvi.Downloader = new(FakeDownloader)
